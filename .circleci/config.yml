version: 2.1

orbs:
    docker: circleci/docker@1.0.1
jobs:
    prepare-dependencies:
        docker:
            - image: node:current-alpine
        steps:
            - checkout
            - run:
                  name: Compute version number
                  command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
            - store_artifacts:
                path: .
            - persist_to_workspace:
                  root: .
                  paths:
                      - .
    build:
        docker:
            - image: node:current-alpine
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Production build
                  command: |
                      export __BUILD_VERSION="$(cat version.txt)"
            - run:
                  name: Version Number
                  command: echo $(cat version.txt)
            - run:
                  name: Build Number
                  command: echo $CIRCLE_BUILD_NUM
            - store_artifacts:
                path: .
            - persist_to_workspace:
                  root: .
                  paths:
                      - .
    deploy-dev:
        machine:
            image: ubuntu-1604:202004-01
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Version Number
                  command: echo $(cat version.txt)
            - store_artifacts:
                path: .
            - persist_to_workspace:
                  root: .
                  paths:
                      - .
            - run:
                  name: Setup __BUILD_VERSION envvar
                  command: |
                      echo "export __BUILD_VERSION=\"$(cat version.txt)\"" >> $BASH_ENV
            - run:
                  name: Print __BUILD_VERSION
                  command: echo $__BUILD_VERSION
    deploy-qa:
        machine:
            image: ubuntu-1604:202004-01
        parameters:
            velocity-parameter:
              type: string
              default: velocity-parm-qa
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Version Number
                  command: echo $(cat version.txt)
            - store_artifacts:
                path: .
            - persist_to_workspace:
                  root: .
                  paths:
                      - .
            - run:
                  name: Setup __BUILD_VERSION envvar
                  command: |
                      echo "export __BUILD_VERSION=\"$(cat version.txt)\"" >> $BASH_ENV
            - run:
                  name: Print passed parm
                  command: echo << parameters.velocity-parameter >>
    deploy-prod:
        machine:
            image: ubuntu-1604:202004-01
        parameters:
            velocity-parameter:
              type: string
              default: velocity-parm-prod
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Version Number
                  command: echo $(cat version.txt)
            - store_artifacts:
                path: .
            - persist_to_workspace:
                  root: .
                  paths:
                      - .
            - run:
                  name: Setup __BUILD_VERSION envvar
                  command: |
                      echo "export __BUILD_VERSION=\"$(cat version.txt)\"" >> $BASH_ENV
            - run:
                  name: Print passed parm
                  command: echo << parameters.velocity-parameter >>

workflows:
    version: 2
    build-workfow:
        jobs:
            - prepare-dependencies
            - build:
                  requires:
                      - prepare-dependencies
    
    deploy-prod-workflow:
        jobs:
            - prepare-dependencies:
                filters:
                    branches:
                        only:
                            - circleci-project-setup
            - hold:
                  type: approval
                  requires:
                      - prepare-dependencies
            - deploy-qa:
                  velocity-parameter: 'passing this as qa'
                  requires:
                      - hold
            - deploy-prod:
                  velocity-parameter: 'passing this as prod'
                  requires:
                      - hold
    deploy-dev-workflow:
        jobs:
            - build:
                filters:
                  branches:
                    only:
                      - master
            - deploy-dev:
                requires:
                  - build
